/* This Code generated by cvPreprocessor ver 0.5 */
#include <cv.h>
#include <highgui.h>

IplImage* img,*pimg,*timg;
void Process();

int main( )
{
   Process();
   if(img){
     cvNamedWindow( "Source", 1 );
     cvShowImage( "Source", img );
   }
   if(pimg){
     cvNamedWindow( "Processed Image", 1 );
     cvShowImage( "Processed Image", pimg );
   }
   cvWaitKey(0);

   if(img)
     cvReleaseImage(&img);
   if(pimg)
     cvReleaseImage(&pimg);

}
void Process()
{

/* Loads Images */
  if(img)
    cvReleaseImage(&img);
  img=cvLoadImage( "03.jpg ", CV_LOAD_IMAGE_UNCHANGED );

/* Converts image from color space ( RGB ) to a Gray Scale */
  if(pimg)
    cvReleaseImage(&pimg);
  pimg = cvCreateImage( cvGetSize(img), IPL_DEPTH_8U, 1 );
  cvCvtColor( img, pimg, CV_RGB2GRAY );

/* Copy Image2 to Image1 */
  if(img)
    cvReleaseImage(&img);
  img=cvCloneImage(pimg);

/* Aplly Laplace Edge-Detection Operation */
  if(pimg)
    cvReleaseImage(&pimg);
  timg = cvCreateImage (cvGetSize (img), IPL_DEPTH_16S, 1);
  pimg = cvCreateImage (cvGetSize (img), IPL_DEPTH_8U, 1);
  cvLaplace (img, timg, -1);
  cvConvertScaleAbs (timg, pimg);
  cvReleaseImage (&timg);
}
