=== SINGLE_THREAD threads=4 BS=1 ===
success
T  0: 5.583053000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD threads=4 BS=2 ===
success
T  0: 6.091426000000000 s
T  1: 0.000001000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD threads=4 BS=VEC_LEN/NT ===
success
T  0: 5.663303000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== LOCAL_BLOCKS threads=4 BS=1 ===
success
T  0: 0.000318000000000 s
T  1: 0.000302000000000 s
T  2: 0.000330000000000 s
T  3: 0.000323000000000 s

=== LOCAL_BLOCKS threads=4 BS=2 ===
success
T  0: 0.000303000000000 s
T  1: 0.000313000000000 s
T  2: 0.000305000000000 s
T  3: 0.000325000000000 s

=== LOCAL_BLOCKS threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000321000000000 s
T  1: 0.000322000000000 s
T  2: 0.000306000000000 s
T  3: 0.000327000000000 s

=== FORALL_AFFINITY threads=4 BS=1 ===
success
T  0: 0.005220000000000 s
T  1: 0.005219000000000 s
T  2: 0.005214000000000 s
T  3: 0.005225000000000 s

=== FORALL_AFFINITY threads=4 BS=2 ===
success
T  0: 0.007199000000000 s
T  1: 0.007203000000000 s
T  2: 0.007195000000000 s
T  3: 0.007196000000000 s

=== FORALL_AFFINITY threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012473000000000 s
T  1: 0.012504000000000 s
T  2: 0.012500000000000 s
T  3: 0.012507000000000 s

=== FORALL_AFFINITY_SPLIT threads=4 BS=1 ===
success
T  0: 0.005740000000000 s
T  1: 0.005736000000000 s
T  2: 0.005742000000000 s
T  3: 0.005739000000000 s

=== FORALL_AFFINITY_SPLIT threads=4 BS=2 ===
success
T  0: 0.003991000000000 s
T  1: 0.003990000000000 s
T  2: 0.003987000000000 s
T  3: 0.003990000000000 s

=== FORALL_AFFINITY_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000325000000000 s
T  1: 0.000303000000000 s
T  2: 0.000316000000000 s
T  3: 0.000334000000000 s

=== FORALL_ITERATION threads=4 BS=1 ===
success
T  0: 0.004319000000000 s
T  1: 0.004315000000000 s
T  2: 0.004319000000000 s
T  3: 0.004318000000000 s

=== FORALL_ITERATION threads=4 BS=2 ===
success
T  0: 0.998614000000000 s
T  1: 1.890549000000000 s
T  2: 1.891179000000000 s
T  3: 1.001339000000000 s

=== FORALL_ITERATION threads=4 BS=VEC_LEN/NT ===
success
T  0: 1.420972000000000 s
T  1: 1.508247000000000 s
T  2: 1.531275000000000 s
T  3: 1.417955000000000 s

=== FORALL_ITERATION_SPLIT threads=4 BS=1 ===
error
T  0: 0.003166000000000 s
T  1: 0.000268000000000 s
T  2: 0.000268000000000 s
T  3: 0.000268000000000 s

=== FORALL_ITERATION_SPLIT threads=4 BS=2 ===
error
T  0: 0.002184000000000 s
T  1: 0.000134000000000 s
T  2: 0.000134000000000 s
T  3: 0.000134000000000 s

=== FORALL_ITERATION_SPLIT threads=4 BS=VEC_LEN/NT ===
error
T  0: 0.000303000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FORALL_PARTITIONED threads=4 BS=1 ===
success
T  0: 0.004318000000000 s
T  1: 0.004311000000000 s
T  2: 0.004319000000000 s
T  3: 0.004316000000000 s

=== FORALL_PARTITIONED threads=4 BS=2 ===
success
T  0: 0.006021000000000 s
T  1: 0.005044000000000 s
T  2: 0.005059000000000 s
T  3: 0.005020000000000 s

=== FORALL_PARTITIONED threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.008437000000000 s
T  1: 0.008448000000000 s
T  2: 0.008444000000000 s
T  3: 0.008395000000000 s

=== FORALL_PARTITIONED_SPLIT threads=4 BS=1 ===
success
T  0: 0.004993000000000 s
T  1: 0.005004000000000 s
T  2: 0.004973000000000 s
T  3: 0.005046000000000 s

=== FORALL_PARTITIONED_SPLIT threads=4 BS=2 ===
success
T  0: 0.002961000000000 s
T  1: 0.002945000000000 s
T  2: 0.002967000000000 s
T  3: 0.002968000000000 s

=== FORALL_PARTITIONED_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000317000000000 s
T  1: 0.000304000000000 s
T  2: 0.000303000000000 s
T  3: 0.000331000000000 s

=== FOR_SINGLE_ELEMENT_BLOCKS threads=4 BS=1 ===
success
T  0: 0.003752000000000 s
T  1: 0.003753000000000 s
T  2: 0.003752000000000 s
T  3: 0.003756000000000 s

=== FOR_SINGLE_ELEMENT_BLOCKS threads=4 BS=2 ===
success
T  0: 0.886196000000000 s
T  1: 1.978425000000000 s
T  2: 1.842608000000000 s
T  3: 0.997318000000000 s

=== FOR_SINGLE_ELEMENT_BLOCKS threads=4 BS=VEC_LEN/NT ===
success
T  0: 1.394512000000000 s
T  1: 1.394749000000000 s
T  2: 1.479722000000000 s
T  3: 1.361733000000000 s

=== FOR_BLOCKS_TRAVERSAL threads=4 BS=1 ===
success
T  0: 0.003848000000000 s
T  1: 0.003860000000000 s
T  2: 0.003863000000000 s
T  3: 0.003879000000000 s

=== FOR_BLOCKS_TRAVERSAL threads=4 BS=2 ===
success
T  0: 0.003531000000000 s
T  1: 0.003534000000000 s
T  2: 0.003534000000000 s
T  3: 0.003531000000000 s

=== FOR_BLOCKS_TRAVERSAL threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.005831000000000 s
T  1: 0.005849000000000 s
T  2: 0.005833000000000 s
T  3: 0.005831000000000 s

=== FOR_BLOCKS_TRAVERSAL_SPLIT threads=4 BS=1 ===
success
T  0: 0.003958000000000 s
T  1: 0.003954000000000 s
T  2: 0.003951000000000 s
T  3: 0.003948000000000 s

=== FOR_BLOCKS_TRAVERSAL_SPLIT threads=4 BS=2 ===
success
T  0: 0.002113000000000 s
T  1: 0.002114000000000 s
T  2: 0.002106000000000 s
T  3: 0.002111000000000 s

=== FOR_BLOCKS_TRAVERSAL_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000325000000000 s
T  1: 0.000329000000000 s
T  2: 0.000305000000000 s
T  3: 0.000314000000000 s

=== FOR_PARTITIONED threads=4 BS=1 ===
error
T  0: 0.000000000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FOR_PARTITIONED threads=4 BS=2 ===
error
T  0: 0.000000000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FOR_PARTITIONED threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.006100000000000 s
T  1: 0.006098000000000 s
T  2: 0.006098000000000 s
T  3: 0.006098000000000 s

=== FOR_PARTITIONED_SPLIT threads=4 BS=1 ===
error
T  0: 0.000000000000000 s
T  1: 0.000001000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FOR_PARTITIONED_SPLIT threads=4 BS=2 ===
error
T  0: 0.000000000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FOR_PARTITIONED_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000303000000000 s
T  1: 0.000307000000000 s
T  2: 0.000316000000000 s
T  3: 0.000350000000000 s

=== SINGLE_THREAD_BULK_COPY threads=4 BS=1 ===
success
T  0: 5.362888000000000 s
T  1: 0.000001000000000 s
T  2: 0.000000000000000 s
T  3: 0.000001000000000 s

=== SINGLE_THREAD_BULK_COPY threads=4 BS=2 ===
success
T  0: 2.775324000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012816000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_SPLIT threads=4 BS=1 ===
success
T  0: 5.909358000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_SPLIT threads=4 BS=2 ===
success
T  0: 2.884073000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012147000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC threads=4 BS=1 ===
success
T  0: 4.006925000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000001000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC threads=4 BS=2 ===
success
T  0: 1.957992000000000 s
T  1: 0.000001000000000 s
T  2: 0.000000000000000 s
T  3: 0.000001000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012431000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC_SPLIT threads=4 BS=1 ===
success
T  0: 3.885518000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC_SPLIT threads=4 BS=2 ===
success
T  0: 2.014532000000000 s
T  1: 0.000000000000000 s
T  2: 0.000001000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012469000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000001000000000 s

