=== SINGLE_THREAD threads=4 BS=1 ===
success
T  0: 5.678318000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD threads=4 BS=2 ===
success
T  0: 5.155095000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD threads=4 BS=VEC_LEN/NT ===
success
T  0: 5.674135000000000 s
T  1: 0.000001000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== LOCAL_BLOCKS threads=4 BS=1 ===
success
T  0: 0.000314000000000 s
T  1: 0.000303000000000 s
T  2: 0.000327000000000 s
T  3: 0.000331000000000 s

=== LOCAL_BLOCKS threads=4 BS=2 ===
success
T  0: 0.000322000000000 s
T  1: 0.000322000000000 s
T  2: 0.000308000000000 s
T  3: 0.000316000000000 s

=== LOCAL_BLOCKS threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000365000000000 s
T  1: 0.000318000000000 s
T  2: 0.000320000000000 s
T  3: 0.000320000000000 s

=== FORALL_AFFINITY threads=4 BS=1 ===
success
T  0: 0.005223000000000 s
T  1: 0.005214000000000 s
T  2: 0.005231000000000 s
T  3: 0.005222000000000 s

=== FORALL_AFFINITY threads=4 BS=2 ===
success
T  0: 0.007370000000000 s
T  1: 0.007347000000000 s
T  2: 0.007325000000000 s
T  3: 0.007318000000000 s

=== FORALL_AFFINITY threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012491000000000 s
T  1: 0.012449000000000 s
T  2: 0.012488000000000 s
T  3: 0.012508000000000 s

=== FORALL_AFFINITY_SPLIT threads=4 BS=1 ===
success
T  0: 0.005824000000000 s
T  1: 0.005991000000000 s
T  2: 0.005875000000000 s
T  3: 0.005832000000000 s

=== FORALL_AFFINITY_SPLIT threads=4 BS=2 ===
success
T  0: 0.003981000000000 s
T  1: 0.003990000000000 s
T  2: 0.003979000000000 s
T  3: 0.003987000000000 s

=== FORALL_AFFINITY_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000318000000000 s
T  1: 0.000328000000000 s
T  2: 0.000320000000000 s
T  3: 0.000320000000000 s

=== FORALL_ITERATION threads=4 BS=1 ===
success
T  0: 0.004315000000000 s
T  1: 0.004314000000000 s
T  2: 0.004331000000000 s
T  3: 0.004324000000000 s

=== FORALL_ITERATION threads=4 BS=2 ===
success
T  0: 0.999472000000000 s
T  1: 1.885357000000000 s
T  2: 1.885448000000000 s
T  3: 0.999425000000000 s

=== FORALL_ITERATION threads=4 BS=VEC_LEN/NT ===
success
T  0: 1.400907000000000 s
T  1: 1.408416000000000 s
T  2: 1.508659000000000 s
T  3: 1.363221000000000 s

=== FORALL_ITERATION_SPLIT threads=4 BS=1 ===
success
T  0: 0.004990000000000 s
T  1: 0.005013000000000 s
T  2: 0.004978000000000 s
T  3: 0.005050000000000 s

=== FORALL_ITERATION_SPLIT threads=4 BS=2 ===
error
T  0: 0.004679000000000 s
T  1: 0.000717000000000 s
T  2: 0.004689000000000 s
T  3: 0.000716000000000 s

=== FORALL_ITERATION_SPLIT threads=4 BS=VEC_LEN/NT ===
error
T  0: 0.001211000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000001000000000 s

=== FORALL_PARTITIONED threads=4 BS=1 ===
success
T  0: 0.004313000000000 s
T  1: 0.004314000000000 s
T  2: 0.004318000000000 s
T  3: 0.004315000000000 s

=== FORALL_PARTITIONED threads=4 BS=2 ===
success
T  0: 0.005127000000000 s
T  1: 0.005028000000000 s
T  2: 0.005045000000000 s
T  3: 0.005024000000000 s

=== FORALL_PARTITIONED threads=4 BS=VEC_LEN/NT ===
success
T  0: 5.580877000000000 s
T  1: 0.002316000000000 s
T  2: 0.002352000000000 s
T  3: 0.002355000000000 s

=== FORALL_PARTITIONED_SPLIT threads=4 BS=1 ===
success
T  0: 0.004993000000000 s
T  1: 0.005003000000000 s
T  2: 0.004982000000000 s
T  3: 0.005043000000000 s

=== FORALL_PARTITIONED_SPLIT threads=4 BS=2 ===
success
T  0: 0.002985000000000 s
T  1: 0.002949000000000 s
T  2: 0.002975000000000 s
T  3: 0.002971000000000 s

=== FORALL_PARTITIONED_SPLIT threads=4 BS=VEC_LEN/NT ===
error
T  0: 0.001242000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000001000000000 s

=== FOR_SINGLE_ELEMENT_BLOCKS threads=4 BS=1 ===
success
T  0: 0.003757000000000 s
T  1: 0.003752000000000 s
T  2: 0.003763000000000 s
T  3: 0.003755000000000 s

=== FOR_SINGLE_ELEMENT_BLOCKS threads=4 BS=2 ===
success
T  0: 0.980077000000000 s
T  1: 1.983913000000000 s
T  2: 1.955327000000000 s
T  3: 0.996770000000000 s

=== FOR_SINGLE_ELEMENT_BLOCKS threads=4 BS=VEC_LEN/NT ===
success
T  0: 1.447594000000000 s
T  1: 1.450625000000000 s
T  2: 1.433095000000000 s
T  3: 1.448303000000000 s

=== FOR_BLOCKS_TRAVERSAL threads=4 BS=1 ===
success
T  0: 0.003861000000000 s
T  1: 0.003853000000000 s
T  2: 0.003852000000000 s
T  3: 0.003851000000000 s

=== FOR_BLOCKS_TRAVERSAL threads=4 BS=2 ===
success
T  0: 0.003971000000000 s
T  1: 0.003594000000000 s
T  2: 0.003622000000000 s
T  3: 0.003581000000000 s

=== FOR_BLOCKS_TRAVERSAL threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.005828000000000 s
T  1: 0.005837000000000 s
T  2: 0.005834000000000 s
T  3: 0.005831000000000 s

=== FOR_BLOCKS_TRAVERSAL_SPLIT threads=4 BS=1 ===
success
T  0: 0.003954000000000 s
T  1: 0.003960000000000 s
T  2: 0.003949000000000 s
T  3: 0.003953000000000 s

=== FOR_BLOCKS_TRAVERSAL_SPLIT threads=4 BS=2 ===
success
T  0: 0.002111000000000 s
T  1: 0.002121000000000 s
T  2: 0.002113000000000 s
T  3: 0.002097000000000 s

=== FOR_BLOCKS_TRAVERSAL_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000317000000000 s
T  1: 0.000351000000000 s
T  2: 0.000326000000000 s
T  3: 0.000328000000000 s

=== FOR_PARTITIONED threads=4 BS=1 ===
error
T  0: 0.000000000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FOR_PARTITIONED threads=4 BS=2 ===
error
T  0: 0.000000000000000 s
T  1: 0.000001000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FOR_PARTITIONED threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.006091000000000 s
T  1: 0.006100000000000 s
T  2: 0.006097000000000 s
T  3: 0.006096000000000 s

=== FOR_PARTITIONED_SPLIT threads=4 BS=1 ===
error
T  0: 0.000000000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FOR_PARTITIONED_SPLIT threads=4 BS=2 ===
error
T  0: 0.000000000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== FOR_PARTITIONED_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.000303000000000 s
T  1: 0.000318000000000 s
T  2: 0.000310000000000 s
T  3: 0.000327000000000 s

=== SINGLE_THREAD_BULK_COPY threads=4 BS=1 ===
success
T  0: 5.578170000000000 s
T  1: 0.000001000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY threads=4 BS=2 ===
success
T  0: 2.781905000000000 s
T  1: 0.000001000000000 s
T  2: 0.000001000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012414000000000 s
T  1: 0.000000000000000 s
T  2: 0.000001000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_SPLIT threads=4 BS=1 ===
success
T  0: 5.615418000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_SPLIT threads=4 BS=2 ===
success
T  0: 2.891436000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012222000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC threads=4 BS=1 ===
success
T  0: 3.883609000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC threads=4 BS=2 ===
success
T  0: 1.898179000000000 s
T  1: 0.000000000000000 s
T  2: 0.000001000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012455000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000001000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC_SPLIT threads=4 BS=1 ===
success
T  0: 3.860628000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000001000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC_SPLIT threads=4 BS=2 ===
success
T  0: 1.947413000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

=== SINGLE_THREAD_BULK_COPY_ASYNC_SPLIT threads=4 BS=VEC_LEN/NT ===
success
T  0: 0.012143000000000 s
T  1: 0.000000000000000 s
T  2: 0.000000000000000 s
T  3: 0.000000000000000 s

